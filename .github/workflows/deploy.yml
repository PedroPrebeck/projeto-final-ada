name: Deploy to EC2

on:
  push:
    branches:
      - stage
      - main

jobs:
  deploy-to-staging:
    if: github.ref == 'refs/heads/stage'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        python -m unittest discover

    - name: Deploy to EC2
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'us-east-1'
        EC2_PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
      run: |
        echo "${{ secrets.EC2_PRIVATE_KEY }}" > /tmp/ec2-key.pem
        chmod 600 /tmp/ec2-key.pem
        ssh -i /tmp/ec2-key.pem -o StrictHostKeyChecking=no ec2-user@${{ secrets.STAGE_EC2_IP }} << EOF
          cd /home/ec2-user/app
          source /home/ec2-user/myenv/bin/activate
          pip install -r requirements.txt
          git pull origin stage
          source /home/ec2-user/myenv/bin/activate
          pip install -r requirements.txt
          fuser -k 5000/tcp || true
          nohup gunicorn --bind 0.0.0.0:5000 app:app &
        EOF

  deploy-to-production:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
  
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
  
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
  
      - name: Run tests
        run: |
          python -m unittest discover
  
      - name: Deploy to EC2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-east-1'
          EC2_PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > /tmp/ec2-key.pem
          chmod 600 /tmp/ec2-key.pem
          ssh -i /tmp/ec2-key.pem -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_IP }} << EOF
            cd /home/ec2-user/app
            git pull origin main
            source /home/ec2-user/myenv/bin/activate
            pip install -r requirements.txt
            fuser -k 5000/tcp || true
            nohup gunicorn --bind 0.0.0.0:5000 app:app &
          EOF